{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAmCmBA,MA9BnB,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IACTC,MAAQL,EAAKM,KACbC,SACI,SAACC,GAAD,OACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAGhD,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAC3BU,KAAK,QACLC,QAAU,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAbZJ,EAAKI,QAkB/C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,O,eCxBbmB,IAAQC,IAAIC,K,IA+EGC,E,kDA5Eb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXtB,MAAO,GACPuB,YAAY,CACVf,KAAM,GACNF,IAAK,KAGT,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZA,E,+CAcnB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,qBAIf,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACM,KAAfA,EAAQxB,KAAU,CACnB,IAAMR,EAAK,sBAAM2B,KAAKL,MAAMtB,OAAjB,CAAwBgC,IACnCL,KAAKC,SAAS,CACZ5B,MAAOA,EACPuB,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAKZ,SAAWA,GACT,IAAM6B,EAAgBR,KAAKL,MAAMtB,MAAMoC,QAAO,SAAAlC,GAAI,OAChDA,EAAKI,MAAMA,KACXqB,KAAKC,SAAS,CACZ5B,MAAOmC,M,uBAGb,SAAU3B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GAKR,OAJGA,EAAKI,MAAMA,IACZ2B,QAAQC,IAAIhC,EAAKI,IAAK,OAAOA,GAC7BJ,EAAKM,KAAMA,GAENN,KAETyB,KAAKC,SAAS,CACZ5B,MAAOA,M,oBAGX,WACA,OACE,sBAAKG,UAAU,MAAf,UACE,iCACA,uBAAME,GAAG,aAAagC,SAAUV,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOkC,YAAY,aAC/B/B,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cACf,wBAAQpB,KAAK,SAAb,sBAGF,cAAC,EAAD,CAAWJ,MAAO2B,KAAKL,MAAMtB,MAC7Be,WAAcY,KAAKZ,WACnBJ,UAAagB,KAAKhB,mB,GAvEN4B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e70b37d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css' \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n        {\r\n            return <div className=\"list\" key={item.key}>\r\n                <p>\r\n                    <input type=\"text\" \r\n                    id={item.key} \r\n                    value ={item.text}\r\n                    onChange={\r\n                        (e) =>\r\n                           props.setUpdate(e.target.value, item.key)\r\n                    }\r\n                    />       \r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" \r\n                    icon='trash'\r\n                    onClick={ () => props.deleteItem(item.key)}/>\r\n                </span>\r\n                </p>\r\n            </div>\r\n        })\r\n    return (\r\n        <div>\r\n            <FlipMove duration={300} easing=\"ease-in-out\">\r\n            {listItems}\r\n            </FlipMove>\r\n            </div>\r\n    )\r\n    }\r\n    export default ListItems;","import React from 'react';\nimport './App.css';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem:{\n        text: '',\n        key: ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text!==\"\"){\n      const items =[...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    } \n  }\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => \n      item.key!==key);\n      this.setState({\n        items: filteredItems\n      })\n  }\n  setUpdate(text, key){\n    const items = this.state.items;\n    items.map(item =>{\n      if(item.key===key){\n        console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n      return item\n    })\n    this.setState({\n      items: items\n    })\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <header>\n      <form id=\"to-do-form\" onSubmit={this.addItem}>\n        <input type=\"text\" placeholder=\"Enter Text\"\n        value={this.state.currentItem.text}\n        onChange={this.handleInput}/>\n        <button type=\"submit\">Add</button>\n      </form>\n      </header>\n      <ListItems items={this.state.items}\n      deleteItem = {this.deleteItem}\n      setUpdate = {this.setUpdate}\n      />\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}